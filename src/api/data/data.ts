/**
 * Generated by orval v6.21.0 üç∫
 * Do not edit manually.
 * Sensorium API
 * OpenAPI spec version: 1.0.0
 */
import {
  useMutation
} from '@tanstack/react-query'
import type {
  MutationFunction,
  UseMutationOptions
} from '@tanstack/react-query'
import type {
  CreatePhoto,
  DataSavePhotoCreateErrorResponse400,
  ErrorResponse401,
  ErrorResponse405,
  ErrorResponse406,
  ErrorResponse415,
  ErrorResponse500
} from '../../models'
import { customInstance } from '../../providers/axios';


// eslint-disable-next-line
  type SecondParameter<T extends (...args: any) => any> = T extends (
  config: any,
  args: infer P,
) => any
  ? P
  : never;


/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤–∏–¥–∞ base64 –ª–æ–∫–∞–ª—å–Ω–æ –≤ –ø–∞–ø–∫—É media –∏ –ø–æ–∫–∞–∑–∞–Ω–∏—è –¥–∞—Ç—á–∏–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü—É indicator_values.
 */
export const dataSavePhotoCreate = (
    createPhoto: CreatePhoto,
 options?: SecondParameter<typeof customInstance>,) => {
      
      
      return customInstance<void>(
      {url: `/api/v1/data/save-photo/`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: createPhoto
    },
      options);
    }
  


export const getDataSavePhotoCreateMutationOptions = <TError = DataSavePhotoCreateErrorResponse400 | ErrorResponse401 | ErrorResponse405 | ErrorResponse406 | ErrorResponse415 | ErrorResponse500,
    
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<typeof dataSavePhotoCreate>>, TError,{data: CreatePhoto}, TContext>, request?: SecondParameter<typeof customInstance>}
): UseMutationOptions<Awaited<ReturnType<typeof dataSavePhotoCreate>>, TError,{data: CreatePhoto}, TContext> => {
 const {mutation: mutationOptions, request: requestOptions} = options ?? {};

      


      const mutationFn: MutationFunction<Awaited<ReturnType<typeof dataSavePhotoCreate>>, {data: CreatePhoto}> = (props) => {
          const {data} = props ?? {};

          return  dataSavePhotoCreate(data,requestOptions)
        }

        


   return  { mutationFn, ...mutationOptions }}

    export type DataSavePhotoCreateMutationResult = NonNullable<Awaited<ReturnType<typeof dataSavePhotoCreate>>>
    export type DataSavePhotoCreateMutationBody = CreatePhoto
    export type DataSavePhotoCreateMutationError = DataSavePhotoCreateErrorResponse400 | ErrorResponse401 | ErrorResponse405 | ErrorResponse406 | ErrorResponse415 | ErrorResponse500

    export const useDataSavePhotoCreate = <TError = DataSavePhotoCreateErrorResponse400 | ErrorResponse401 | ErrorResponse405 | ErrorResponse406 | ErrorResponse415 | ErrorResponse500,
    
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<typeof dataSavePhotoCreate>>, TError,{data: CreatePhoto}, TContext>, request?: SecondParameter<typeof customInstance>}
) => {

      const mutationOptions = getDataSavePhotoCreateMutationOptions(options);

      return useMutation(mutationOptions);
    }
    